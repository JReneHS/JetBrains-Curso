operadores aritméticos


En la vida real, a menudo realizamos operaciones aritméticas. Nos ayudan a calcular el precio de las compras, determinar las dimensiones de la habitación o el área del jardín, calcular el número de personas invitadas a una fiesta, etc. Los programadores a menudo tienen que utilizar las mismas operaciones para escribir scripts.



Operadores aritméticos binarios
El lenguaje de programación JavaScript proporciona operadores para realizar operaciones aritméticas. Se llaman binarios porque se aplican a dos operandos (objetos sobre los que se realiza la operación).


adición +
    console.log(12 + 26); // 38
    console.log(5 + 4.5); // 9.5

Por + lo general, se usa para agregar números, pero si aplica este operador a cadenas, las combina en una:

    console.log("My name is " + "John"); // My name is John

sustracción -
    console.log(5 - 3);   // 2
    console.log(6 - 0.1); // 5.9

multiplicación *
    console.log(10 * 4);  // 40
    console.log(2 * 1.5); // 3

división /
    console.log(8 / 2); // 4
    console.log(12 / 5); // 2.4

resto %. Este operador encuentra el residuo de la división:

    console.log(10 % 3); // 1, because 10 divided by 3 leaves a remainder of 1
    console.log(12 % 4); // 0, because 12 divided by 4 leaves no remainder

exponenciación **

    console.log(2 ** 3); // 8, because (2 * 2 * 2) is 8




Escribir expresiones complejas

Las operaciones aritméticas se pueden combinar para escribir expresiones más complejas:

    console.log(1 + 3 * 4 - 2) // 11

El orden de cálculo sigue las reglas básicas de las operaciones aritméticas. La multiplicación tiene un nivel de prioridad más alto que la suma y la resta, por lo que 3 * 4se calcula primero.

Para especificar el orden de ejecución, podemos usar paréntesis como en el siguiente ejemplo:

    console.log((1 + 3) * (4 - 2)); // 8

Como en la aritmética, los paréntesis se pueden anidar entre sí. Siéntase libre de usarlos para una mejor claridad del código.




Operadores unarios

Unario se refiere a los operadores que se aplican a un solo operando.

El operador unario más indica un valor positivo. Es un operador opcional si solo trabaja con números:

    console.log(+7); // 7

El operador unario menos hace que un valor o una expresión sean negativos:
    console.log(-9);         // -9
    console.log(-(100 + 5)); // -105




Orden de precedencia
Si varios operadores están involucrados en una expresión, se ejecutarán en orden de prioridad. La siguiente lista está ordenada desde el nivel de precedencia más alto al más bajo:

    paréntesis
    unario más / menos
    exponenciación
    multiplicación, división
    Adición y sustracción

El orden de realizar operaciones aritméticas en JavaScript básicamente sigue el de las matemáticas, por lo que no es necesario que lo aprenda específicamente.